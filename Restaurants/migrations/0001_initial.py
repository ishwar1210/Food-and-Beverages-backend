# Generated by Django 5.2.1 on 2025-09-10 05:15

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Cuisine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.BigIntegerField(unique=True)),
                ('loyalty_points', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Ingredient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Supplier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('contact_info', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('cuisine', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Restaurants.cuisine')),
            ],
        ),
        migrations.CreateModel(
            name='InventoryItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sku', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('uom', models.CharField(choices=[('grams', 'Grams'), ('kg', 'Kilograms'), ('ml', 'Milliliters'), ('ltr', 'Liters'), ('pieces', 'Pieces'), ('unit', 'Unit')], default='unit', max_length=20)),
                ('current_qty', models.DecimalField(decimal_places=4, default=0, max_digits=18, validators=[django.core.validators.MinValueValidator(0)])),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('reorder_point', models.DecimalField(decimal_places=4, default=0, max_digits=18)),
                ('safety_stock', models.DecimalField(decimal_places=4, default=0, max_digits=18)),
                ('lead_time_days', models.IntegerField(default=0)),
                ('eoq', models.DecimalField(decimal_places=4, default=0, max_digits=18)),
                ('bin_location', models.CharField(blank=True, max_length=100)),
                ('serialized', models.BooleanField(default=False)),
                ('expiry_date', models.DateField(blank=True, null=True)),
                ('valuation', models.DecimalField(decimal_places=2, default=0, max_digits=20)),
                ('stock_turnover_rate', models.DecimalField(decimal_places=4, default=0, max_digits=8)),
                ('forecast', models.DecimalField(decimal_places=4, default=0, max_digits=18)),
                ('ml_model_version', models.CharField(blank=True, max_length=50)),
                ('barcode_status', models.BooleanField(default=False)),
                ('rfid_tag_id', models.CharField(blank=True, max_length=100)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Restaurants.category')),
                ('preferred_supplier', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Restaurants.supplier')),
            ],
        ),
        migrations.CreateModel(
            name='InventoryAudit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(max_length=100)),
                ('user_id', models.BigIntegerField(blank=True, null=True)),
                ('qty_before', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('qty_after', models.DecimalField(blank=True, decimal_places=4, max_digits=18, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('details', models.TextField(blank=True)),
                ('item', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Restaurants.inventoryitem')),
            ],
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('item_type', models.CharField(choices=[('veg', 'Veg'), ('non-veg', 'Non-Veg')], default='veg', max_length=7)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Restaurants.category')),
                ('cuisine', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Restaurants.cuisine')),
            ],
        ),
        migrations.CreateModel(
            name='ItemIngredient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('qty', models.DecimalField(decimal_places=2, max_digits=10)),
                ('qty_type', models.CharField(choices=[('grams', 'Grams'), ('ml', 'Milliliters'), ('pieces', 'Pieces')], max_length=20)),
                ('ingredient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Restaurants.ingredient')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Restaurants.item')),
            ],
        ),
        migrations.CreateModel(
            name='Restaurant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('restaurant_name', models.CharField(max_length=100)),
                ('address', models.CharField(max_length=255)),
                ('number', models.CharField(max_length=15)),
                ('alternative_number', models.CharField(max_length=15)),
                ('landline_number', models.CharField(max_length=15)),
                ('delivery_time', models.CharField(blank=True, max_length=100)),
                ('serves_alcohol', models.BooleanField(default=False)),
                ('wheelchair_accessible', models.BooleanField(default=False)),
                ('cash_on_delivery', models.BooleanField(default=False)),
                ('pure_veg', models.BooleanField(default=False)),
                ('terms_and_conditions', models.TextField(blank=True)),
                ('closing_message', models.TextField(blank=True)),
                ('cost_for_two', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('cuisines', models.ManyToManyField(related_name='restaurants', to='Restaurants.cuisine')),
            ],
        ),
        migrations.CreateModel(
            name='OrderConfigure',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('GST_percentage', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('delivery_charge', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('service_charge', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('minimum_order', models.IntegerField(default=0)),
                ('order_not_available_text', models.TextField(blank=True)),
                ('restaurant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Restaurants.restaurant')),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_name', models.CharField(max_length=50)),
                ('Qty', models.IntegerField(default=1)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('kot', models.IntegerField(default=1)),
                ('order_time', models.DateTimeField(auto_now_add=True)),
                ('total_price', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('payment_mode', models.CharField(choices=[('cash', 'Cash'), ('Due', 'Due'), ('card', 'Card'), ('Part Payment', 'Part Payment'), ('Other', 'Other')], max_length=20)),
                ('order_type', models.CharField(choices=[('dine_in', 'Dine In'), ('Pick_Up', 'Pick Up'), ('delivery', 'Delivery')], max_length=20)),
                ('Paid', models.BooleanField(default=False)),
                ('loyalty', models.BooleanField(default=False)),
                ('loyalty_points', models.IntegerField(default=0)),
                ('restaurant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Restaurants.restaurant')),
            ],
        ),
        migrations.CreateModel(
            name='RestaurantSchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('operational_days', models.JSONField(blank=True, default=list)),
                ('start_time', models.TimeField(blank=True, null=True)),
                ('end_time', models.TimeField(blank=True, null=True)),
                ('break_start_time', models.TimeField(blank=True, null=True)),
                ('break_end_time', models.TimeField(blank=True, null=True)),
                ('booking_allowed', models.BooleanField(default=False)),
                ('order_allowed', models.BooleanField(default=False)),
                ('last_booking_time', models.TimeField(blank=True, null=True)),
                ('restaurant', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='Restaurants.restaurant')),
            ],
        ),
        migrations.AddField(
            model_name='item',
            name='restaurant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Restaurants.restaurantschedule'),
        ),
        migrations.CreateModel(
            name='Blocked_Day',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('block_type', models.CharField(choices=[('order', 'Order'), ('booking', 'Booking')], max_length=10)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('restaurant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blocked_days', to='Restaurants.restaurantschedule')),
            ],
        ),
        migrations.CreateModel(
            name='RestoCoverImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='resto_cover_images/')),
                ('is_active', models.BooleanField(default=True)),
                ('restaurant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Restaurants.restaurant')),
            ],
        ),
        migrations.CreateModel(
            name='RestoGalleryImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='resto_gallery_images/')),
                ('restaurant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Restaurants.restaurant')),
            ],
        ),
        migrations.CreateModel(
            name='RestoMenuImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='resto_menu_images/')),
                ('restaurant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Restaurants.restaurant')),
            ],
        ),
        migrations.CreateModel(
            name='RestoOtherFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='resto_other_files/')),
                ('restaurant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Restaurants.restaurant')),
            ],
        ),
        migrations.CreateModel(
            name='TableBooking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('no_of_tables', models.IntegerField(default=0)),
                ('min_people', models.IntegerField(default=1)),
                ('max_people', models.IntegerField(default=10)),
                ('can_cancel_before', models.TimeField(blank=True, null=True)),
                ('booking_not_available_text', models.TextField(blank=True)),
                ('no_of_floors', models.IntegerField(default=1)),
                ('restaurant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Restaurants.restaurant')),
            ],
        ),
        migrations.CreateModel(
            name='Warehouse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('restaurant', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='warehouse', to='Restaurants.restaurant')),
            ],
        ),
        migrations.CreateModel(
            name='InventoryMovement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('movement_type', models.CharField(choices=[('IN', 'Stock In'), ('OUT', 'Stock Out'), ('TRANSFER', 'Transfer')], max_length=10)),
                ('qty', models.DecimalField(decimal_places=4, max_digits=18, validators=[django.core.validators.MinValueValidator(0)])),
                ('uom', models.CharField(choices=[('grams', 'Grams'), ('kg', 'Kilograms'), ('ml', 'Milliliters'), ('ltr', 'Liters'), ('pieces', 'Pieces'), ('unit', 'Unit')], default='unit', max_length=20)),
                ('transfer_order_number', models.CharField(blank=True, max_length=100)),
                ('ship_date', models.DateField(blank=True, null=True)),
                ('receive_date', models.DateField(blank=True, null=True)),
                ('batch_serial_number', models.CharField(blank=True, max_length=200)),
                ('inspection_status', models.CharField(blank=True, max_length=50)),
                ('remarks', models.TextField(blank=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='movements', to='Restaurants.inventoryitem')),
                ('from_location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='movements_from', to='Restaurants.warehouse')),
                ('to_location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='movements_to', to='Restaurants.warehouse')),
            ],
        ),
    ]
